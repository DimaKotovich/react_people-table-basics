{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","api/api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","src","alt","HomePage","getPeople","a","fetch","response","json","PersonRow","person","name","sex","born","died","fatherName","motherName","PeopleTable","peoples","map","people","PeoplePage","useState","setPeoples","getData","useCallback","peopleServer","withParents","child","childCopy","parent","find","father","mother","useEffect","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"wUAIaA,EAAmB,WAC9B,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,eAA1B,SACE,qBACEE,IAAI,uDACJC,IAAI,OACJH,UAAU,0BAId,cAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,eAAhC,SACE,qBACEE,IAAI,oDACJC,IAAI,SACJH,UAAU,8BChBPI,G,MAAqB,WAChC,OACE,8BACE,oBAAIJ,UAAU,cAAd,2B,sCCFOK,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAAM,GAAD,OAHlB,wDAGkB,iBADL,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCITC,G,MAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,OAEA,OACE,qBAAIX,UAAU,cAAd,UACE,oBAAIA,UAAU,eAAd,SAA8BW,EAAOC,OACrC,oBAAIZ,UAAU,eAAd,SAA8BW,EAAOE,MACrC,oBAAIb,UAAU,eAAd,SAA8BW,EAAOG,OACrC,oBAAId,UAAU,eAAd,SAA8BW,EAAOI,OACrC,oBAAIf,UAAU,eAAd,SAA8BW,EAAOK,YAAc,MACnD,oBAAIhB,UAAU,eAAd,SAA8BW,EAAOM,YAAc,WCT5CC,G,MAA+B,SAAC,GAEtC,IADLC,EACI,EADJA,QAEA,OACE,wBAAOnB,UAAU,QAAjB,UACE,uBAAOA,UAAU,gBAAjB,SACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBAGHmB,GACC,uBAAOnB,UAAU,cAAjB,SACGmB,EAAQC,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CACEV,OAAQU,GACHA,EAAOT,gBCpBbU,G,MAAuB,WAClC,MAA8BC,mBAAiC,MAA/D,mBAAOJ,EAAP,KAAgBK,EAAhB,KAEMC,EAAUC,sBAAW,sBAAC,8BAAApB,EAAA,sEACWD,IADX,OACpBsB,EADoB,OAEpBC,EAA+BD,EAAaP,KAAI,SAAAS,GACpD,IAAMC,EAAwB,eAAQD,GAEhCE,EAASJ,EAAaK,MAAK,SAAArB,GAC/B,OAAOkB,EAAMb,aAAeL,EAAOC,MAC9BiB,EAAMb,aAAeL,EAAOC,QAWnC,OARImB,IACiB,MAAfA,EAAOlB,IACTiB,EAAUG,OAASF,EAEnBD,EAAUI,OAASH,GAIhBD,KAGTN,EAAWI,GArBe,2CAsBzB,IAMH,OAJAO,qBAAU,WACRV,MACC,IAGD,gCACE,oBAAIzB,UAAU,gBAAd,0BAIA,cAAC,EAAD,CAAamB,QAASA,SC5CfiB,EAAyB,WACpC,OACE,8BACE,mDCmBSC,G,MAhBM,kBACnB,qCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUtC,GAAG,IAAIuC,SAAO,MAErD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cCb/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf77f7fc.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <nav className=\"header\">\n      <NavLink to=\"/\" className=\"header__link\">\n        <img\n          src=\"https://img.icons8.com/cotton/64/000000/home--v3.png\"\n          alt=\"Home\"\n          className=\"header__link--image\"\n        />\n      </NavLink>\n\n      <NavLink to=\"/people\" className=\"header__link\">\n        <img\n          src=\"https://img.icons8.com/doodle/96/000000/crowd.png\"\n          alt=\"People\"\n          className=\"header__link--image\"\n        />\n      </NavLink>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './Home.scss';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div>\n      <h1 className=\"home__title\">\n        Home Page\n      </h1>\n    </div>\n  );\n};\n","import { People } from '../types/types';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api';\n\nexport const getPeople = async (): Promise<People[]> => {\n  const response = await fetch(`${URL}/people.json`);\n\n  return response.json();\n};\n","import React from 'react';\nimport { PeopleParents } from '../../types/types';\nimport './PersonRow.scss';\n\ntype Props = {\n  person: PeopleParents;\n};\n\nexport const PersonRow: React.FC<Props> = ({\n  person,\n}) => {\n  return (\n    <tr className=\"person__row\">\n      <td className=\"person__cell\">{person.name}</td>\n      <td className=\"person__cell\">{person.sex}</td>\n      <td className=\"person__cell\">{person.born}</td>\n      <td className=\"person__cell\">{person.died}</td>\n      <td className=\"person__cell\">{person.fatherName || '-'}</td>\n      <td className=\"person__cell\">{person.motherName || '-'}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PeopleParents } from '../../types/types';\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  peoples: PeopleParents[] | null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peoples,\n}) => {\n  return (\n    <table className=\"table\">\n      <thead className=\"table__titles\">\n        <tr className=\"table__row\">\n          <th className=\"table__cell\">Name</th>\n          <th className=\"table__cell\">Sex</th>\n          <th className=\"table__cell\">Born</th>\n          <th className=\"table__cell\">Died</th>\n          <th className=\"table__cell\">Father</th>\n          <th className=\"table__cell\">Mother</th>\n        </tr>\n      </thead>\n      {peoples && (\n        <tbody className=\"table__body\">\n          {peoples.map(people => (\n            <PersonRow\n              person={people}\n              key={people.name}\n            />\n          ))}\n        </tbody>\n      )}\n    </table>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { getPeople } from '../../api/api';\n\nimport { People, PeopleParents } from '../../types/types';\nimport { PeopleTable } from '../PeopleTable';\n\nimport './PeoplePage.scss';\n\nexport const PeoplePage: React.FC = () => {\n  const [peoples, setPeoples] = useState<PeopleParents[] | null>(null);\n\n  const getData = useCallback(async () => {\n    const peopleServer: People[] = await getPeople();\n    const withParents: PeopleParents[] = peopleServer.map(child => {\n      const childCopy: PeopleParents = { ...child };\n\n      const parent = peopleServer.find(person => {\n        return child.fatherName === person.name\n          || child.fatherName === person.name;\n      });\n\n      if (parent) {\n        if (parent.sex === 'm') {\n          childCopy.father = parent;\n        } else {\n          childCopy.mother = parent;\n        }\n      }\n\n      return childCopy;\n    });\n\n    setPeoples(withParents);\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"people__title\">\n        People table\n      </h1>\n\n      <PeopleTable peoples={peoples} />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div>\n      <h1>\n        Page not found\n      </h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport './App.scss';\n\nconst App:React.FC = () => (\n  <>\n    <Header />\n\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n      <Route path=\"/\" element={<HomePage />} />\n\n      <Route path=\"/people\" element={<PeoplePage />} />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}